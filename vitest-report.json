{"numTotalTestSuites":25,"numPassedTestSuites":21,"numFailedTestSuites":4,"numPendingTestSuites":0,"numTotalTests":40,"numPassedTests":36,"numFailedTests":3,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1744923503573,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AnalysisService MCP Mode"],"fullName":"AnalysisService MCP Mode should use orchestrator MCP mode and return MCP stub package","status":"passed","title":"should use orchestrator MCP mode and return MCP stub package","duration":1.8509679999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["AnalysisService MCP Mode"],"fullName":"AnalysisService MCP Mode should handle MCP failure and return error","status":"passed","title":"should handle MCP failure and return error","duration":0.4096279999999979,"failureMessages":[],"meta":{}}],"startTime":1744923503860,"endTime":1744923503862.4097,"status":"passed","message":"","name":"/app/tests/analysis.service.mcp.test.ts"},{"assertionResults":[{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should successfully process a build, call analysis, execute package, and update status","status":"passed","title":"should successfully process a build, call analysis, execute package, and update status","duration":4.707274000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should update status to FAILED if execution fails","status":"passed","title":"should update status to FAILED if execution fails","duration":0.6923789999999883,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should log a warning and return if build is not in PENDING_ANALYSIS state","status":"passed","title":"should log a warning and return if build is not in PENDING_ANALYSIS state","duration":1.032588000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should update status to FAILED if build has no target URLs","status":"passed","title":"should update status to FAILED if build has no target URLs","duration":0.6354189999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during processing and update status to FAILED","status":"passed","title":"should handle errors during processing and update status to FAILED","duration":4.722273999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during analysis and update status to FAILED","status":"passed","title":"should handle errors during analysis and update status to FAILED","duration":1.1226309999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle invalid JSON in target URLs and update status to FAILED","status":"passed","title":"should handle invalid JSON in target URLs and update status to FAILED","duration":0.5514609999999891,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during temp package update and update status to FAILED","status":"passed","title":"should handle errors during temp package update and update status to FAILED","duration":0.6772530000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during sample results update and update status to FAILED","status":"passed","title":"should handle errors during sample results update and update status to FAILED","duration":1.3507569999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during analysis and update status to FAILED","status":"passed","title":"should handle errors during analysis and update status to FAILED","duration":0.6562540000000183,"failureMessages":[],"meta":{}},{"ancestorTitles":["processBuildJob"],"fullName":"processBuildJob should handle errors during temp package update and update status to FAILED","status":"passed","title":"should handle errors during temp package update and update status to FAILED","duration":0.4802110000000255,"failureMessages":[],"meta":{}}],"startTime":1744923503729,"endTime":1744923503745.6562,"status":"passed","message":"","name":"/app/tests/build.processor.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Integration Tests"],"fullName":"Container Integration Tests should build the Podman Docker image successfully (skipped: requires Podman, best run in CI)","status":"skipped","title":"should build the Podman Docker image successfully (skipped: requires Podman, best run in CI)","failureMessages":[],"meta":{}}],"startTime":1744923503573,"endTime":1744923503573,"status":"passed","message":"","name":"/app/tests/container.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Database Integration Tests"],"fullName":"Database Integration Tests should connect to the PostgreSQL database successfully","status":"passed","title":"should connect to the PostgreSQL database successfully","duration":34.377424000000005,"failureMessages":[],"meta":{}}],"startTime":1744923504245,"endTime":1744923504279.3774,"status":"passed","message":"","name":"/app/tests/database.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["UnifiedOrchestratorImpl (Dual Mode)"],"fullName":"UnifiedOrchestratorImpl (Dual Mode) callTool (mode: both) should prefer MCP if both succeed","status":"passed","title":"callTool (mode: both) should prefer MCP if both succeed","duration":2.0830100000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnifiedOrchestratorImpl (Dual Mode)"],"fullName":"UnifiedOrchestratorImpl (Dual Mode) callTool (mode: both) should fallback to classic if MCP fails","status":"passed","title":"callTool (mode: both) should fallback to classic if MCP fails","duration":0.8488370000000032,"failureMessages":[],"meta":{}}],"startTime":1744923503967,"endTime":1744923503969.8489,"status":"passed","message":"","name":"/app/tests/orchestrator/unifiedOrchestrator.both.test.ts"},{"assertionResults":[{"ancestorTitles":["UnifiedOrchestratorImpl (MCP Mode)"],"fullName":"UnifiedOrchestratorImpl (MCP Mode) callTool (mode: mcp) should use MCPClientStub and return stub output","status":"passed","title":"callTool (mode: mcp) should use MCPClientStub and return stub output","duration":1.5171330000000012,"failureMessages":[],"meta":{}}],"startTime":1744923504464,"endTime":1744923504465.517,"status":"passed","message":"","name":"/app/tests/orchestrator/unifiedOrchestrator.mcp.test.ts"},{"assertionResults":[{"ancestorTitles":["UnifiedOrchestratorImpl"],"fullName":"UnifiedOrchestratorImpl callTool returns correct mode and structure for mode: classic","status":"passed","title":"callTool returns correct mode and structure for mode: classic","duration":1.2544649999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnifiedOrchestratorImpl"],"fullName":"UnifiedOrchestratorImpl callTool returns correct mode and structure for mode: mcp","status":"passed","title":"callTool returns correct mode and structure for mode: mcp","duration":0.2535430000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnifiedOrchestratorImpl"],"fullName":"UnifiedOrchestratorImpl callTool returns correct mode and structure for mode: both","status":"passed","title":"callTool returns correct mode and structure for mode: both","duration":0.7779629999999997,"failureMessages":[],"meta":{}}],"startTime":1744923504374,"endTime":1744923504375.778,"status":"passed","message":"","name":"/app/tests/orchestrator/unifiedOrchestrator.test.ts"},{"assertionResults":[{"ancestorTitles":["GET /builds/:build_id input validation"],"fullName":"GET /builds/:build_id input validation should return 404 for root builds path (missing ID)","status":"passed","title":"should return 404 for root builds path (missing ID)","duration":4.8478999999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["GET /builds/:build_id input validation"],"fullName":"GET /builds/:build_id input validation should reject invalid build_id format with 400","status":"passed","title":"should reject invalid build_id format with 400","duration":0.49795999999997775,"failureMessages":[],"meta":{}},{"ancestorTitles":["GET /builds/:build_id input validation"],"fullName":"GET /builds/:build_id input validation should reject request with missing API key with 401","status":"passed","title":"should reject request with missing API key with 401","duration":0.4048779999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["GET /builds/:build_id input validation"],"fullName":"GET /builds/:build_id input validation should reject request with invalid API key with 401","status":"passed","title":"should reject request with invalid API key with 401","duration":0.2712930000000142,"failureMessages":[],"meta":{}},{"ancestorTitles":["GET /builds/:build_id input validation"],"fullName":"GET /builds/:build_id input validation should return 404 for a valid build_id that does not exist","status":"failed","title":"should return 404 for a valid build_id that does not exist","duration":10.350968999999964,"failureMessages":["AssertionError: expected 404 to be 405 // Object.is equality\n    at /app/tests/regression/get-build-status.validation.test.ts:68:33\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///app/node_modules/@vitest/runner/dist/index.js:595:20"],"meta":{}}],"startTime":1744923504177,"endTime":1744923504193.351,"status":"failed","message":"","name":"/app/tests/regression/get-build-status.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["Orchestrator Regression Suite"],"fullName":"Orchestrator Regression Suite classic mode: returns classic stub result","status":"passed","title":"classic mode: returns classic stub result","duration":1.0135879999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Orchestrator Regression Suite"],"fullName":"Orchestrator Regression Suite mcp mode: returns MCP stub result","status":"passed","title":"mcp mode: returns MCP stub result","duration":0.17129200000000822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Orchestrator Regression Suite"],"fullName":"Orchestrator Regression Suite both mode: prefers MCP if both succeed","status":"passed","title":"both mode: prefers MCP if both succeed","duration":0.8443379999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Orchestrator Regression Suite"],"fullName":"Orchestrator Regression Suite both mode: falls back to classic if MCP fails","status":"passed","title":"both mode: falls back to classic if MCP fails","duration":0.45321099999999603,"failureMessages":[],"meta":{}}],"startTime":1744923504147,"endTime":1744923504149.4531,"status":"passed","message":"","name":"/app/tests/regression/orchestrator.regression.test.ts"},{"assertionResults":[{"ancestorTitles":["AnalysisResult type contract"],"fullName":"AnalysisResult type contract should allow success=true only if package is present and error is absent","status":"passed","title":"should allow success=true only if package is present and error is absent","duration":0.5978369999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["AnalysisResult type contract"],"fullName":"AnalysisResult type contract should allow success=false only if error is present and package is absent","status":"passed","title":"should allow success=false only if error is present and package is absent","duration":0.16962599999999384,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite","Infrastructure Checks","Database Connection"],"fullName":"The Brain App - Regression Suite Infrastructure Checks Database Connection should connect to the PostgreSQL database successfully","status":"passed","title":"should connect to the PostgreSQL database successfully","duration":36.528727,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite"],"fullName":"The Brain App - Regression Suite processes a build end-to-end (happy path)","status":"passed","title":"processes a build end-to-end (happy path)","duration":2.8007229999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite"],"fullName":"The Brain App - Regression Suite fails gracefully if no target URLs","status":"passed","title":"fails gracefully if no target URLs","duration":0.5683779999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite"],"fullName":"The Brain App - Regression Suite handles analysis (LLM) failure","status":"passed","title":"handles analysis (LLM) failure","duration":3.8183939999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite"],"fullName":"The Brain App - Regression Suite handles execution failure","status":"passed","title":"handles execution failure","duration":0.5287950000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["The Brain App - Regression Suite"],"fullName":"The Brain App - Regression Suite handles invalid JSON in targetUrls","status":"passed","title":"handles invalid JSON in targetUrls","duration":0.27037599999999884,"failureMessages":[],"meta":{}}],"startTime":1744923503745,"endTime":1744923503798.2703,"status":"passed","message":"","name":"/app/tests/regression/the-brain-app.regression.test.ts"},{"assertionResults":[{"ancestorTitles":["POST /runs"],"fullName":"POST /runs returns 200 and a run_id for valid input","status":"failed","title":"returns 200 and a run_id for valid input","duration":36.51497600000005,"failureMessages":["AssertionError: expected 404 to be 200 // Object.is equality\n    at /app/tests/modules/runs/runs.controller.test.ts:30:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///app/node_modules/@vitest/runner/dist/index.js:595:20"],"meta":{}},{"ancestorTitles":["POST /runs"],"fullName":"POST /runs returns 400 for invalid input","status":"failed","title":"returns 400 for invalid input","duration":4.665939999999978,"failureMessages":["AssertionError: expected 404 to be 400 // Object.is equality\n    at /app/tests/modules/runs/runs.controller.test.ts:43:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///app/node_modules/@vitest/runner/dist/index.js:595:20"],"meta":{}}],"startTime":1744923504504,"endTime":1744923504544.666,"status":"failed","message":"","name":"/app/tests/modules/runs/runs.controller.test.ts"}]}